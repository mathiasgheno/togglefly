service: lambda-dynamodb-v2
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:ListTables
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:sa-east-1:258835071595:table/*"

functions:
  createFeature:
    handler: dist/index.createFeatureHandler
    events:
      - http:
          path: /features
          method: post
          cors: true

  listFeature:
    handler: dist/index.listAllFeaturesHandler
    events:
      - http:
          path: /features
          method: get
          cors: true

  getFeature:
    handler: dist/index.getFeatureHandler
    events:
      - http:
          path: /features/{id}
          method: get
          cors: true

  deleteFeature:
    handler: dist/index.deleteFeatureHandler
    events:
      - http:
          path: /features/{id}
          method: delete
          cors: true

  updateFeature:
    handler: dist/index.updateFeatureHandle
    events:
      - http:
          path: /features/{id}
          method: put
          cors: true

  listRoles:
    handler: dist/index.listAllRolesHandler
    events:
      - http:
          path: /roles
          method: get
          cors: true

  listSystems:
    handler: dist/index.listAllSystemsHandler
    events:
      - http:
          path: /systems
          method: get
          cors: true


resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: todos
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
